{"version":3,"sources":["webpack:///./src/models/post.js","webpack:///./src/utils/helpers.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/components/post-header/index.js","webpack:///./src/components/post-cards-adjacent/index.js","webpack:///./src/components/post-content/index.js","webpack:///./src/components/utterances/index.js","webpack:///./src/templates/blog-template.js"],"names":["Post","id","node","html","excerpt","frontmatter","slug","emoji","categories","title","author","date","this","getSortedCategoriesByCount","posts","cntPerCategory","obj","sortable","item","b","a","sortObjectByValue","getBody","selector","document","hasClassOfBody","className","element","hasClass","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","asyncGeneratorStep","gen","_next","_throw","post","viewCount","to","category","prevPost","nextPost","dangerouslySetInnerHTML","__html","Utterances","repo","rootElm","React","useEffect","isDarkTheme","utterances","utterancesConfig","src","branch","theme","label","crossorigin","ref","data","useState","setViewCount","curPost","siteUrl","comments","utterancesRepo","namespace","fetch","args","arguments","apply","description"],"mappings":"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","file":"component---src-templates-blog-template-js-81a0bdb76c7b9297c690.js","sourcesContent":["export default class Post {\n  constructor(node) {\n    const { id, html, excerpt, frontmatter, fields } = node;\n    const { slug } = fields;\n    const { emoji, categories, title, author, date } = frontmatter;\n\n    this.id = id;\n    this.excerpt = excerpt;\n    this.emoji = emoji;\n    this.html = html;\n    this.slug = slug;\n    this.title = title;\n    this.author = author;\n    this.date = date;\n    this.categories = categories.split(' ');\n  }\n}\n","const sortObjectByValue = (obj) => {\n  let sortable = [];\n  for (let item in obj) sortable.push([item, obj[item]]);\n  sortable.sort((a, b) => b[1] - a[1]);\n  return sortable;\n};\n\nexport const getSortedCategoriesByCount = (posts) => {\n  const cntPerCategory = {};\n\n  posts.forEach(({ categories }) => {\n    categories.forEach((category) => {\n      cntPerCategory[category] = cntPerCategory[category] ? cntPerCategory[category] + 1 : 1;\n    });\n  });\n\n  return sortObjectByValue(cntPerCategory).map(([category]) => category);\n};\n\nexport const getElement = (selector) => document.querySelector(selector);\n\nexport const getBody = () => getElement(\"body\");\n\nexport const hasClass = (element, className) => element.classList.contains(className);\n\nexport const hasClassOfBody = (className) => hasClass(getBody(), className);","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nconst PostHeader = ({ post, viewCount }) => {\n  return (\n    <header className=\"post-header-wrapper\">\n      <div className=\"post-header\">\n        {post.emoji && <div className=\"emoji\">{post.emoji}</div>}\n\n        <div className=\"info\">\n          <div className=\"categories\">\n            {post.categories.map((category) => (\n              <Link className=\"category\" key={category} to={`/posts/${category}`}>\n                {category}\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        <h1 className=\"title\">{post.title}</h1>\n        <div className=\"info\">\n          posted by <strong>{post.author}</strong> · {post.date}\n          {viewCount && ` · ${viewCount} views`}\n        </div>\n      </div>\n    </header>\n  );\n};\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport './style.scss';\n\nconst PostCardsAdjacent = ({ prevPost, nextPost }) => {\n  return (\n    <div className=\"post-cards-adjacent-wrapper\">\n      <div className=\"post-cards-adjacent\">\n        {prevPost && (\n          <Link className=\"post-card prev\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n        {nextPost && (\n          <Link className=\"post-card next\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// PostCards.propTypes = {\n//   contents: PropTypes.object({\n//     id: PropTypes.string,\n//     html: PropTypes.string,\n//     frontmatter: PropTypes.object({\n//       date: PropTypes.string,\n//       title: PropTypes.string,\n//       category: PropTypes.string,\n//     }),\n//\n//   }).isRequired,\n// };\n\nexport default PostCardsAdjacent;\n","import React from 'react';\n\nimport './style.scss';\n\nconst PostContent = ({ html }) => (\n  <div className=\"post-content-wrapper\">\n    <div className=\"post-content\">\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  </div>\n);\n\nexport default PostContent;\n","import React, { useEffect } from 'react';\nimport { hasClassOfBody } from '../../utils/helpers';\nconst src = 'https://utteranc.es/client.js';\nconst branch = 'master';\n\nexport const Utterances = ({ repo }) => {\n  const rootElm = React.createRef();\n\n  useEffect(() => {\n    const isDarkTheme = hasClassOfBody(\"dark\");\n    const utterances = document.createElement('script');\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: isDarkTheme ? \"photon-dark\" : 'github-light',\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    };\n\n    Object.entries(utterancesConfig).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n    \n    rootElm.current.appendChild(utterances);\n  }, []);\n\n  return <div className=\"utterances\" ref={rootElm} />\n    \n};\n","import React, { useEffect, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n// import TableOfContents from '../components/toc';\nimport PostHeader from '../components/post-header';\nimport PostCardsAdjacent from '../components/post-cards-adjacent';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport { Utterances } from '../components/utterances';\n\nexport default ({ data }) => {\n  const [viewCount, setViewCount] = useState(null);\n\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { siteUrl, comments } = data.site?.siteMetadata;\n  const utterancesRepo = comments?.utterances?.repo;\n\n  useEffect(() => {\n    if (!siteUrl) return;\n    const namespace = siteUrl.replace(/(^\\w+:|^)\\/\\//, '');\n    const key = curPost.slug.replace(/\\//g, '');\n\n    fetch(\n      `https://api.countapi.xyz/${\n        process.env.NODE_ENV === 'development' ? 'get' : 'hit'\n      }/${namespace}/${key}`,\n    ).then(async (result) => {\n      const data = await result.json();\n      setViewCount(data.value);\n    });\n  }, [siteUrl, curPost.slug]);\n\n  return (\n    <Layout>\n      <SEO title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} viewCount={viewCount} />\n      <PostContent html={curPost.html} />\n      <PostCardsAdjacent prevPost={prevPost} nextPost={nextPost} />\n      {utterancesRepo && <Utterances repo={utterancesRepo} />}\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 350, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          utterances {\n            repo\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}